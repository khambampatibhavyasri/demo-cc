name: CI/CD Pipeline - Test, Build & Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GKE_CLUSTER: campusconnect-cluster
  GKE_ZONE: us-central1-a
  DEPLOYMENT_NAME: campusconnect-deployment
  IMAGE: campusconnect
  REPOSITORY: campusconnect-repo
  LOCATION: us-central1

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: |
          cc/package-lock.json
          server/package-lock.json

    - name: Install Frontend Dependencies
      run: |
        cd cc
        npm ci

    - name: Install Backend Dependencies
      run: |
        cd server
        npm install

    - name: Run Frontend Tests
      run: |
        cd cc
        npm test -- --coverage --watchAll=false --passWithNoTests
      continue-on-error: false

    - name: Run Backend Tests
      run: |
        cd server
        npm test
      continue-on-error: false

    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          cc/coverage/
          server/test-results/

  build-and-deploy:
    name: Build and Deploy to GKE
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'

    - name: 'Configure Docker to use gcloud as credential helper'
      run: |-
        gcloud auth configure-docker $LOCATION-docker.pkg.dev

    - name: Get GKE credentials
      run: |-
        gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"

    - name: Build Docker image
      run: |-
        docker build -t "$LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA" .

    - name: Push Docker image
      run: |-
        docker push "$LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA"

    - name: Deploy to GKE
      run: |-
        # Replace the image name in the k8s template
        sed -i "s|us-central1-docker.pkg.dev/campusconnect-project-12345/campusconnect-repo/campusconnect:latest|$LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA|g" k8s-deployment.yaml
        kubectl apply -f k8s-deployment.yaml
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide